#애플리케이션 포트 설정
server.port=8080


#콘솔로그 컬러로 변경
spring.output.ansi.enabled=alawys


#OSIV가 false
#Transaction이 끝나면 영속성컨텍스트 또한 닫힌다.
#실시간 트래픽이 중요한 어플리케이션에서는 DB Connection이 모자를 수 있다. 성능이 중요하다면 OSIV는 false로 설정
spring.jpa.open-in-view=false




########################################################################################################
############################## Auto build - start ######################################################
########################################################################################################
#Springboot auto build
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true
#Thymeleaf cache 사용 중지
spring.thymeleaf.cache =false
#기본값으로 설정되어 있음
#spring.thymeleaf.prefix=classpath:templates/
#spring.thymeleaf.suffix=.html



########################################################################################################
###############################  MySQL 설정 - start #####################################################
########################################################################################################
#MySQL 연결설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/loginSignup?serverTimezone=UTC
spring.datasource.username=loginSignup
spring.datasource.password=1234






############################################################################################################
############################## 			jpa 옵션           ##################################################
############################################################################################################
#none: 아무것도 실행하지 않는다 (대부분의 DB에서 기본값이다)
#create-drop: SessionFactory가 시작될 때 drop및 생성을 실행하고, SessionFactory가 종료될 때 drop을 실행한다 (in-memory DB의 경우 기본값이다)
#create: SessionFactory가 시작될 때 데이터베이스 drop을 실행하고 생성된 DDL을 실행한다
#update: 변경된 스키마를 적용한다
#validate: 변경된 스키마가 있다면 변경점을 출력하고 애플리케이션을 종료한다
spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.database=mysql

# MySQL 상세 지정
#SQL 은 표준 SQL과 DBMS 벤더에서 제공하는 SQL 이 존재합니다. 각 공급업체에서 만든 SQL 을 방언(Dialect)이라고
#생각하면 됩니다. 우리가 사용하는 데이터베이스는 MySQL 이어서 JPA 에 MySQL8Dialect 를 사용하라고 알려줍니다.
#만약, 데이터베이스를 오라클 교체하더라도, 오라클릐 Dialectf를 설정해준다면 문제없이 애플리케이션을 구동할 수 있습니다.
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect





############################################################################################################
############################## 		logging               ##################################################
############################################################################################################
#실행되는 쿼리 콘솔 출력
spring.jpa.properties.hibernate.show_sql=true
#콘솔창에 출력되는 쿼리를 가독성이 좋게 포맷팅
spring.jpa.properties.hibernate.format_sql=true
#쿼리에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor.sql=trace
#추가적인 주석을 표시하기
spring.jpa.properties.hibernate.use_sql_comments=true










